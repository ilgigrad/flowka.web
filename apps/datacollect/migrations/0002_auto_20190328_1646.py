# Generated by Django 2.0.8 on 2019-03-28 15:46

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('datacollect', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial', models.CharField(blank=True, default='', help_text='column title', max_length=100, null=True, verbose_name='column')),
                ('rename', models.CharField(blank=True, help_text='type a new name for the column', max_length=100, null=True, verbose_name='rename')),
                ('drop_column', models.BooleanField(default=False, help_text='drop this column ?', verbose_name='drop this column')),
                ('target', models.BooleanField(default=False, help_text='is this column a target for prediction or classification ?', verbose_name='is a target ?')),
                ('alter', models.IntegerField(choices=[(0, 'none'), (1, 'intize'), (2, 'floatize'), (3, 'timize'), (4, 'splitize'), (5, 'substrize'), (6, 'regexize')], default=0, help_text='Do you need to transform this field and how would you transform it ?<br>transform string to number or time format, extract a substring or set a &quot;regex&quot; rule', verbose_name='field transformation')),
                ('alter_rule', models.CharField(blank=True, default='', help_text='Please, Specify the rule', max_length=100, null=True, verbose_name='field transformation rule')),
                ('nan', models.IntegerField(choices=[(0, 'none'), (1, 'drop'), (2, 'binary'), (3, 'median'), (4, 'mean'), (5, 'highfreq'), (6, 'lowfreq'), (7, 'max'), (8, 'min'), (9, 'value')], default=0, help_text='What do you want to do when values are missing ?<br>Drop rows with none values or set a rule for replacing them them.<br>e.g. use statistics indicators (median, mean, max...) in place of missing values', verbose_name='managing missing values')),
                ('nan_rule', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='please specify a value')),
                ('category', models.IntegerField(choices=[(0, 'none'), (1, 'dummies'), (2, 'frequencies'), (3, 'ordinals')], default=0, help_text='How would you manage category velues ?<br>Category is a non numerical value that can not be computed (sum, mean,... )<br>it is often a text field like country or color...', verbose_name='managing categories')),
            ],
        ),
        migrations.AddField(
            model_name='dataset',
            name='column',
            field=models.ManyToManyField(blank=True, help_text='Columns of Dataset', related_name='datacollect_dataset_related', related_query_name='datacollect_datasets', to='datacollect.Column', verbose_name='Columns of Dataset'),
        ),
    ]
